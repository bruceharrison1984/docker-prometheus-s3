name: Build and Push Container

on:
  push:
    tags:
      - "v*.*.*"

env:
  IMG: ecomm-prometheus

jobs:
  build:
    name: Build and Push Container
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set Environment Variables
        run: |
          echo "IMAGE=ghcr.io/${{ github.repository_owner }}/${{ env.IMG }}" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "GIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "GIT_REF=$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)" >> $GITHUB_ENV

      - name: Login to GitHub Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.description=Created from commit ${{ env.GIT_SHA }} and ref ${{ env.GIT_REF }}
            org.opencontainers.image.ref.name=${{ env.GIT_REF }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ env.GIT_SHA }}
            ${{ env.IMAGE }}:${{ env.GIT_REF }}
          push: true
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.GIT_REF }}
          body: Tag-based release initiated by ${{ github.actor }}
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
